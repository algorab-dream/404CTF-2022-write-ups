
from eth_account._utils.signing import to_standard_v
from eth_account._utils.legacy_transactions import serializable_unsigned_transaction_from_dict
from eth_keys.datatypes import Signature

def getPubKey():

    vrs = (to_standard_v(0x1c), int("e58712e11aaa32ac207e893cde3b91159c1e1dc5be5a9bd18f0476869806feb6", 16), int("421eef8f63fc2872c86d79048ac053542980768f4b7638da40353c0a95012473", 16))
    signature = Signature(vrs=vrs)    
    tx_dict = {'nonce': 3,
               'gasPrice': 50000000000,
               'gas': 2000000,
               'to': "0xafb1E5c639950c547473De7DC5aFb8D8cEa0658C",
               'value': 1000000000000000
    }
    serialized_tx = serializable_unsigned_transaction_from_dict(tx_dict)
    pubKey = signature.recover_public_key_from_msg_hash(serialized_tx.hash())
    return(pubKey)

print(getPubKey())

